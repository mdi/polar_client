# #Polar Accesslink API
#
# Polar Accesslink API documentation
#
# The version of the OpenAPI document: 3
# Contact: b2bhelpdesk@polar.com
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 6.6.0
#

require "spec_helper"
require "json"

# Unit tests for PolarClient::CardioLoadBetaApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "CardioLoadBetaApi" do
  before do
    # run before each test
    @api_instance = PolarClient::CardioLoadBetaApi.new
  end

  after do
    # run after each test
  end

  describe "test an instance of CardioLoadBetaApi" do
    it "should create an instance of CardioLoadBetaApi" do
      expect(@api_instance).to be_instance_of(PolarClient::CardioLoadBetaApi)
    end
  end

  # unit tests for v3_users_cardio_load_date_get
  # Get cardio load by date
  # Returns cardio load data for selected date.
  # @param date Inclusive start date of range as ISO-8601 date string, example: \&quot;2022-01-01\&quot;
  # @param [Hash] opts the optional parameters
  # @return [Array<CardioLoad>]
  describe "v3_users_cardio_load_date_get test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v3_users_cardio_load_date_get_0
  # Get cardio load by date range
  # Returns cardio load data for selected date range.  The response list contains cardio load objects for every day between range even if the cardio load values cannot be calculated, in this case the cardio load status is represented as LOAD_STATUS_NOT_AVAILABLE.
  # @param from Inclusive as ISO-8601 date string, example: \&quot;2022-01-01\&quot;
  # @param to Inclusive as ISO-8601 date string, example: \&quot;2022-01-01\&quot;
  # @param [Hash] opts the optional parameters
  # @return [Array<CardioLoad>]
  describe "v3_users_cardio_load_date_get_0 test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v3_users_cardio_load_get
  # List cardio loads
  # Returns cardio load data for the last 28 days.
  # @param [Hash] opts the optional parameters
  # @return [Array<CardioLoad>]
  describe "v3_users_cardio_load_get test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v3_users_cardio_load_period_days_days_get
  # Get historical data by days
  # Returns historical cardio load data for selected period of days counting from current date.
  # @param days Period of days.
  # @param [Hash] opts the optional parameters
  # @return [Array<CardioLoad>]
  describe "v3_users_cardio_load_period_days_days_get test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v3_users_cardio_load_period_months_months_get
  # Get historical data by months
  # Returns historical cardio load data for selected period of months counting from current date.
  # @param months Period of months.
  # @param [Hash] opts the optional parameters
  # @return [Array<CardioLoad>]
  describe "v3_users_cardio_load_period_months_months_get test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end
end
