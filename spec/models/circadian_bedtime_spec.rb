# #Polar Accesslink API
#
# Polar Accesslink API documentation
#
# The version of the OpenAPI document: 3
# Contact: b2bhelpdesk@polar.com
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 6.6.0
#

require "spec_helper"
require "json"
require "date"

# Unit tests for PolarClient::CircadianBedtime
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe PolarClient::CircadianBedtime do
  let(:instance) { PolarClient::CircadianBedtime.new }

  describe "test an instance of CircadianBedtime" do
    it "should create an instance of CircadianBedtime" do
      expect(instance).to be_instance_of(PolarClient::CircadianBedtime)
    end
  end
  describe 'test attribute "validity"' do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["VALIDITY_UNKNOWN", "VALIDITY_RESET", "VALIDITY_NOT_VALID", "VALIDITY_ESTIMATE", "VALIDITY_VALID"])
      # validator.allowable_values.each do |value|
      #   expect { instance.validity = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "quality"' do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["CIRCADIAN_BEDTIME_QUALITY_UNKNOWN", "CIRCADIAN_BEDTIME_QUALITY_WEAK", "CIRCADIAN_BEDTIME_QUALITY_COMPROMISED", "CIRCADIAN_BEDTIME_QUALITY_CLEARLY_RECOGNIZABLE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.quality = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "result_type"' do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["CIRCADIAN_BEDTIME_TYPE_UNKNOWN", "CIRCADIAN_BEDTIME_TYPE_PREDICTION", "CIRCADIAN_BEDTIME_TYPE_HISTORY"])
      # validator.allowable_values.each do |value|
      #   expect { instance.result_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "period_start_time"' do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "period_end_time"' do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "preferred_sleep_period_start_time"' do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "preferred_sleep_period_end_time"' do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "sleep_gate_start_time"' do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "sleep_gate_end_time"' do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "sleep_timezone_offset_minutes"' do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end
end
